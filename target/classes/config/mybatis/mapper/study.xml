<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study">

	<select id="selectList" resultType="study">
		select * from study
	</select>

	<!-- 스터디 전체게시물 수 조회 -->
	<select resultType="int" id="count">
		select count(*) from study
	</select>

	<insert id="insert" parameterType="study">
		INSERT INTO study (title, create_user_idx, 
						min_count, max_count, deadline, start_date,
						end_date, open_kakao, purpose, is_online,
						place, extra_info, apply_condition, detail_info,
						study_status, photo) 											
		VALUES (#{title}, #{create_user_idx}, #{min_count}, #{max_count},
				#{deadline}, #{start_date}, #{end_date}, #{open_kakao},
 				#{purpose}, #{is_online},#{place}, #{extra_info}, #{apply_condition}, 
		 		#{detail_info}, '모집중', #{photo} )
	</insert>
	
	<select id="selectOne" parameterType="int" resultType="study">
		select * from study where idx=#{idx}
	</select>
	
	<!--텍스트검색에따른  게시글수 -->
	<select resultType="int" id="search_count" parameterType="java.lang.String">
	
		select count(*)
		from study
		where  title like CONCAT('%',#{search},'%')
	</select>
	
	<!--옵션에대한 텍스트검색에따른  게시글수 -->
	<select resultType="int" id="search_count_condition" parameterType="java.lang.String">
	
		select count(*)
		from study
		where  title like CONCAT('%',#{search},'%')
	</select>
	<!-- 검색기능 -->
	<select resultType="study" id="list_search" parameterType="java.util.Map">
		<if test="search_option !=null">
			<if test="search_option =='3'.toString()">
				 <!-- 분류 -->
				select *
				from (SELECT rank() over(order by idx desc) AS no, b.*
						FROM (select * from study where title like CONCAT('%',#{search},'%')) AS b ) AS list
				where no between #{start} AND #{end}
			</if>
		</if>
	</select>
	
	<select resultType="study" id="list_condition" parameterType="java.util.Map">
		select *, user.name
		from (SELECT rank() over(order by idx
		desc) AS no, s.* FROM (select * from study) AS s ) AS list
		left outer
		join user
		on user.idx = list.create_user_idx
		where no between #{start} AND
		#{end}
	</select>
	
	<!-- 스터디룸 수정하기 -->
	<update id="update_study" parameterType="study">
		UPDATE study SET title=#{title}, photo=#{photo}, min_count=#{min_count},
		max_count=#{max_count},deadline=#{deadline},start_date=#{start_date},
		end_date=#{end_date},open_kakao=#{open_kakao},purpose=#{purpose},
		is_online=#{is_online},place=#{place},extra_info=#{extra_info},
		apply_condition=#{apply_condition},detail_info=#{detail_info},
		updated_at=current_timestamp() where idx=#{idx}
	</update>
	
	
	<!-- 스터디신청하기 -->
	<insert id="apply" parameterType="java.util.Map">
		insert into study_member (user_idx, study_idx, status, is_admin, introduce)
		values (#{user_idx}, #{study_idx}, "승인 대기", 0, #{introduce} )
	</insert>
	
	<update id="add_member" parameterType="java.util.Map">
		update study set apply_count = apply_count + 1
		where study_idx = #{study_idx}
	</update>
	
			<!-- 조건별 검색 -->
	<select resultType="study" id="search_list_condition" parameterType="java.util.Map">
		<if test="search_option !=null">
	
			<if test="search_option =='0'.toString()"> <!-- 온라인 -->
			 	select *
				from (SELECT rank() over(order by idx desc) AS no, b.*
				FROM (select * from study where is_online='0' AND title like CONCAT('%',#{search},'%')) AS b ) AS list
				where no between #{start} AND #{end}
			</if>
		
			<if test="search_option =='1'.toString()"><!-- 오프라인-->
				
				select *
				from (SELECT rank() over(order by idx desc) AS no, b.*
				FROM (select * from study where is_online='1' AND title like CONCAT('%',#{search},'%')) AS b ) AS list
				where no between #{start} AND #{end} 
			</if>
			
			<if test="search_option =='2'.toString()"><!-- 복합 -->
			 	select *
				from (SELECT rank() over(order by idx desc) AS no, b.*
				FROM (select * from study where is_online='2' AND title like CONCAT('%',#{search},'%')) AS b ) AS list
				where no between #{start} AND #{end} 
			</if>
		</if>
	</select>
		
		<sql id="is_online0">
			UPDATE study SET is_online='0'
		</sql>
		
		<sql id="is_online1">
			UPDATE study SET is_online='1'
		</sql>
		
		<sql id="is_online2">
			UPDATE study SET is_online='2'
		</sql>
	
</mapper>












