<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	
	<select id="selectOne_idx" resultType="user">
		select * from user where idx=#{idx}
	</select>

	<select id="selectList" resultType="user">
		select * from user
	</select>
	
	<!-- 아이디 중복 확인 -->
	<select id="emailCheck" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT email FROM user WHERE email = #{email}
	</select>
	
	<!-- 회원 가입 -->
	<insert id="insert" parameterType="user">
		insert into user (email, password, name, phone, is_phone_auth, job, region)
		values (#{email}, #{password}, #{name}, #{phone}, #{is_phone_auth}, #{job}, #{region})
	</insert>
	
	<!-- 로그인 -->
	<select id="login" parameterType="java.lang.String" resultType="user">
		SELECT * FROM user WHERE email = #{email}
	</select>
	
	<!--study의 create_user_idx의 이름 가져오기  -->
	<select id="select_name" parameterType="int" resultType="user">
		SELECT * from user WHERE idx=(SELECT create_user_idx from study where idx=#{idx})
	</select>
	
	<!-- sns 로그인 처리 관련 -->
	<select id="selectOne_user_sns" parameterType="java.lang.String" resultType="user">
		select *
		from user
		where sns_id=#{id}
	</select>
	<update id="update_user_sns" parameterType="java.util.Map">
		update user
		set sns_type='naver', sns_id=#{id}
		where email=#{email}
	</update>
	<insert id="insert_user_sns" parameterType="java.util.Map">
		insert into user (email, is_email_auth, password, name, sns_type, sns_id)
		values (#{email}, 1, #{password}, #{name}, 'naver', #{id})
	</insert>
	
	<!-- 전화번호 중복 체크 -->
	<select id="phoneCheck" parameterType="java.lang.String" resultType="int">
		select count(*) from user WHERE phone = #{phone}
	</select>
	
	<!-- 전화번호 중복 체크 -->
	<select id="phone_name_check" parameterType="java.util.Map" resultType="user">
		select * from user WHERE phone = #{phone} and name = #{name}
	</select>
	
	<!-- 유저 스터디 개수 증가 -->
	<update id="update_study_cnt" parameterType="int">
		update user
		set study=study+1
		where idx=#{create_user_idx}
	</update>
	
	<!-- 유저 스터디 개수 감소 -->
	<update id="decrease_study_cnt" parameterType="int">
		update user
		set study=study-1
		where idx=#{user_idx}
	</update>
	
	<!-- 회원정보 수정하기 -->
	<update id="update_user" parameterType="user">
		UPDATE user SET
		phone=#{phone}, job=#{job}, region = #{region}, password = #{password}
		where idx=#{idx}
	</update>

	<!-- 임시 비밀번호 적용 -->
	<update id="update_user_TempPwd" parameterType="java.util.Map">
		UPDATE user SET
		password=#{tempPwd}
		where email=#{email}
	</update>
	
	<!-- 회원 탈퇴 부분 -->
	<update id="user_del_update" parameterType="user">
		UPDATE user
		SET
		deleted_at = current_timestamp(),
		phone = CONCAT('(del)', #{phone}),
		email = CONCAT('(del)', #{email})
		WHERE idx=#{idx}
	</update>
	
	<!-- 이메일 - 이름 확인  -->
	<select id="email_name_check" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM user
		WHERE email=#{email} and name=#{name}
	</select>
</mapper>












